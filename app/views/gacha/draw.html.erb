<div class="container d-flex flex-column align-items-center justify-content-center text-center" style="min-height: 100vh; background-color: #1c1c1c;">
  <h1 class="mb-4" style="color: #b3003b;">ガチャ結果！</h1>

  <% if @card %>
    <div class="card p-4 mb-4 shadow" style="background-color: #2c2c2c; border: 1px solid #ffd700;">
      <strong class="mb-3 d-block" style="color: #ffd700;">結果：</strong>
      <%= image_tag @card.image, size: '218x270', class: 'mb-3' %>
      <p style="color: #f5f5dc;"> <i class="fa-solid fa-star"></i> <%= @card.st %></p>
    </div>
  <% else %>
    <p style="color: #ff6666;">景品が登録されていません。</p>
  <% end %>

  <!-- スライドで再抽選 -->
  <div id="slider-container">
    <div id="slider">
      <span>➡</span>
    </div>
    <div id="slider-label">もう一度引く</div>
  </div>
</div>

<!-- CSS -->
<style>
  #slider-container {
    width: 300px;
    height: 50px;
    background: #222;
    border-radius: 25px;
    position: relative;
    overflow: hidden;
    user-select: none;
    margin: 20px auto;
    display: flex;
    align-items: center;
    padding: 0 10px;
  }

  #slider {
    width: 50px;
    height: 50px;
    background: linear-gradient(to bottom, #eee, #ccc);
    border-radius: 25px;
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    cursor: grab;
    z-index: 2;
    transition: left 0.3s;
  }

  #slider-label {
    flex: 1;
    text-align: center;
    color: #aaa;
    font-size: 16px;
    z-index: 1;
    pointer-events: none;
  }

  #slider-container.unlocked {
    background: #ffc107;
  }

  #slider-container.unlocked #slider-label {
    color: #000;
  }
</style>

<!-- JavaScript -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const slider = document.getElementById('slider');
    const container = document.getElementById('slider-container');
    let isDragging = false;
    let startX = 0;

    slider.addEventListener('mousedown', (e) => {
      isDragging = true;
      startX = e.clientX;
    });

    document.addEventListener('mousemove', (e) => {
      if (!isDragging) return;
      let dx = e.clientX - startX;
      dx = Math.max(0, Math.min(dx, container.offsetWidth - slider.offsetWidth));
      slider.style.left = dx + 'px';

      if (dx >= container.offsetWidth - slider.offsetWidth - 10) {
        unlock();
      }
    });

    document.addEventListener('mouseup', () => {
      if (!isDragging) return;
      if (!container.classList.contains('unlocked')) {
        slider.style.left = '0px'; // reset
      }
      isDragging = false;
    });

    function unlock() {
      container.classList.add('unlocked');
      slider.innerHTML = '✓';
      slider.style.left = (container.offsetWidth - slider.offsetWidth) + 'px';
      slider.style.cursor = 'default';

      // 再抽選ページに遷移
      window.location.href = "<%= draw_path %>";
    }
  });
</script>
